name: CI

on:
  pull_request:
    branches:
      - "*"
  push:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Prepare Host
        run: |
          # install render-gotpl
          curl -fsSL -o render-gotpl https://github.com/appscodelabs/render-gotpl/releases/download/v0.1.4/render-gotpl-linux-amd64
          chmod +x render-gotpl
          sudo mv render-gotpl /usr/local/bin/render-gotpl

      - name: Run checks
        run: |
          make ci

  kubernetes:
    name: Kubernetes
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        k8s: [v1.14.10, v1.15.11, v1.16.9, v1.17.5, v1.18.8, v1.19.4, v1.20.0]
    steps:
      - uses: actions/checkout@v1

      - name: Create Kubernetes ${{ matrix.k8s }} cluster
        id: kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.9.0
          config: hack/kubernetes/kind.yaml
          image: kindest/node:${{ matrix.k8s }}

      - name: Prepare cluster for testing
        id: local-path
        env:
          DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          USERNAME: 1gtm
          REGISTRY_SECRET: regcred
        run: |
          echo "waiting for nodes to be ready ..."
          kubectl wait --for=condition=Ready nodes --all --timeout=5m
          kubectl get nodes
          echo
          kubectl version

      - name: Install CRDs
        run: |
          kubectl create --validate=false -f https://github.com/stashed/apimachinery/raw/master/crds/stash.appscode.com_functions.yaml
          kubectl create --validate=false -f https://github.com/stashed/apimachinery/raw/master/crds/stash.appscode.com_tasks.yaml
          kubectl wait --for=condition=NamesAccepted crds --all --timeout=5m

      - name: Setup Helm 3
        run: |
          # Avoid v3.3.3 due to https://github.com/helm/helm/commit/520416adf0723321101235780f86245c3a714c3c
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Test Helm 3
        run: |
          helm version || true
          echo "install catalog"
          ./deploy/helm3.sh
          echo "uninstall catalog"
          ./deploy/helm3.sh --uninstall

      - name: Test script installer
        run: |
          helm version || true
          echo "install catalog"
          ./deploy/script.sh
          echo "uninstall catalog"
          ./deploy/script.sh --uninstall

      - name: Setup Helm 2
        run: |
          curl -L https://git.io/get_helm.sh | bash
          kubectl -n kube-system create sa tiller
          kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount=kube-system:tiller
          helm init --service-account tiller
          kubectl wait --for=condition=Ready pods -n kube-system --all --timeout=5m

      - name: Test Helm 2
        run: |
          helm version || true
          echo "install catalog"
          ./deploy/helm2.sh
          echo "uninstall catalog"
          ./deploy/helm2.sh --uninstall
